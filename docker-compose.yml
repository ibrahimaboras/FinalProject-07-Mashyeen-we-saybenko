version: "3.9"

services:
  postgres_user:
    container_name: postgres_user
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user
    volumes:
      - postgres_user_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - spring
    restart: unless-stopped

  postgres_flight:
    container_name: postgres_flight
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flight
    volumes:
      - postgres_flight_volume:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - spring
    restart: unless-stopped

  postgres_booking:
    container_name: postgres_booking
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: booking
    volumes:
      - postgres_booking_volume:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - spring
    restart: unless-stopped

  mongo_notification:
    container_name: mongo_notification
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: notification
    volumes:
      - mongo_notification_volume:/data/db
    ports:
      - "27017:27017"
    networks:
      - spring
    restart: unless-stopped

  redis_user:
    container_name: redis_user
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_user_volume:/data
    networks:
      - spring
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - spring
    restart: unless-stopped
    depends_on:
      - postgres_user
      - postgres_flight
      - postgres_booking

  mongo-express:
    image: mongo-express
    ports:
      - "8000:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo_notification:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - spring
    restart: unless-stopped
    depends_on:
      - mongo_notification

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redis_insight
    ports:
      - "5540:5540"
    networks:
      - spring
    restart: always
    depends_on:
      - redis_user

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring

  eureka-server:
    build:
      context: ./Eureka
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring
    restart: unless-stopped

  apigw:
    build: ./gateway
    container_name: gateway
    ports:
      - "8084:8084"
    environment:
      SPRING_APPLICATION_NAME: api-gateway
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - spring
    restart: unless-stopped
    depends_on:
      - eureka-server

  user:
    build: ./User
    container_name: user
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_user:5432/user
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_APPLICATION_NAME: user-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_RABBITMQ_ADDRESSES: rabbitmq:5672
      CLIENTS_BOOKING_URL: http://booking:8080
    networks:
      - spring
    depends_on:
      - postgres_user
      - redis_user
      - eureka-server

  flight:
    build: ./Flight
    container_name: flight
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_flight:5432/flight
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_APPLICATION_NAME: flight-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - spring
    depends_on:
      - postgres_flight
      - eureka-server

  booking:
    build: ./Booking
    container_name: booking
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_booking:5432/booking
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_APPLICATION_NAME: booking-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      spring.datasource.driver-class-name: org.postgresql.Driver
      spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect
      spring.jpa.hibernate.ddl-auto: create-drop
      spring.jpa.generate-ddl: true
      spring.jpa.show-sql: true
      spring.jpa.properties.hibernate.format_sql: true
      spring.jpa.properties.hibernate.use_sql_comments: true
      spring.rabbitmq.addresses: rabbitmq:5672
      CLIENTS_FLIGHT_URL: http://flight:8080
    networks:
      - spring
    depends_on:
      - postgres_booking
      - rabbitmq
      - eureka-server

  notification:
    build: ./Notification
    container_name: notification
    ports:
      - "8083:8080"
    environment:
      SPRING_APPLICATION_NAME: notification-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_DATA_MONGODB_URI: mongodb://root:example@mongo_notification:27017/notification?authSource=admin
      SPRING_DATA_MONGODB_DATABASE: notification
      SPRING_DATA_MONGODB_USERNAME: root
      SPRING_DATA_MONGODB_PASSWORD: example
      spring.data.mongodb.port: 27017
      spring.data.mongodb.host: mongo_notification
      spring.rabbitmq.addresses: rabbitmq:5672
    networks:
      - spring
    depends_on:
      - mongo_notification
      - rabbitmq
      - eureka-server

networks:
  spring:
    driver: bridge

volumes:
  postgres_user_volume:
  postgres_flight_volume:
  postgres_booking_volume:
  mongo_notification_volume:
  redis_user_volume:
  pgadmin:
